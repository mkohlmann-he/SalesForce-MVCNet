@model SalesForce_MVCNet.Models.SurveyRecord


@{
    ViewBag.Title = "What's your name?";
    Layout = "~/Views/Shared/_Santa.cshtml";
}

@using (Html.BeginForm())
{
    
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    <!-- Required for SalesForce Lead Generator -->
    <meta http-equiv="Content-type" content="text/html; charset=UTF-8">
    <!--  -->



    <div class="col-sm-6">
        <div class="form-horizontal">
            <div class="row" id="DivChildName">
                <div class="row speech_box text-center">
                    <p><h2>HO HO HO! Well Hello! And what's your name?</h2></p>
                    <p><br /><br /><br /></p>
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.childName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.childName, "", new { @class = "text-danger" })
                    <input type="button" value="OK!" class="btn btn-default" id="ButtonChildName" />
                </div>
            </div>
        </div>

        <div class="row" id="DivChildAge">
            <div class="row speech_box text-center">
                <p><h2>Welcome to the North Pole little one. And how old are you?</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.childAge, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.childAge, "", new { @class = "text-danger" })
                <input type="button" value="OK!" class="btn btn-default" id="ButtonChildAge" />
            </div>
        </div>

        <div class="row" id="DivParentName">
            <div class="row speech_box text-center">
                <p><h2>Is your mom or dad there with you? What is their name?</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.parentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.parentName, "", new { @class = "text-danger" })
                <input type="button" value="OK!" class="btn btn-default" id="ButtonParentName" />
            </div>
        </div>

        <div class="row" id="DivEmailAddress">
            <div class="row speech_box text-center">
                <p><h2>Can you get them to type in thier email address? I'm going to tell them how good you were today.</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.emailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emailAddress, "", new { @class = "text-danger" })
                <input type="button" value="OK!" class="btn btn-default" id="ButtonEmailAddress" />
            </div>
        </div>


        <div class="row" id="DivGiftQuestion1">
            <div class="row speech_box text-center">
                <p><h2>Thank you! HO HO HO! Ok, now little one... If you could have only one present in the whole wide world, what would it be?</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                <input type="text" id="tbFirst_Request" />
                <input type="button" value="OK!" class="btn btn-default" id="ButtonFirstRequest" />
            </div>
        </div>


        <div class="row" id="DivGiftQuestion2">
            <div class="row speech_box text-center">
                <p><h2>HO HO HO! That is an excellent gift!! That might be difficult to get you though. If I can't get that, is there anything else you would like?</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                <input type="text" id="tbSecond_Request" />
                <input type="button" value="OK!" class="btn btn-default" id="ButtonSecondRequest" />
            </div>
        </div>


        <div class="row" id="DivRecommendationQuestion">
            <div class="row speech_box text-center">
                <p><h2>If you like those, would you maybe be interested in this instead?</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                <input type="text" id="tbRecommendation" />
                <input type="button" value="OK!" class="btn btn-default" id="ButtonRecommendation" />
            </div>
        </div>


        <div class="row" id="DivCountry">
            <div class="row speech_box text-center">
                <p><h2>HO HO HO! Thank you!<br />
                    ... I hate to ask, but what country to you live in again? I don't want to miss you when I deliver your presents!</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                <input type="button" value="OK!" class="btn btn-default" id="ButtonCountry" />
            </div>
        </div>

        <div class="row" id="DivState">
            <div class="row speech_box text-center">
                <p><h2>Woa! HO, HO... that's a big country! What state or territory are you in?</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                <input type="button" value="OK!" class="btn btn-default" id="ButtonState" />
            </div>
        </div>

        <div class="row" id="DivCity">
            <div class="row speech_box text-center">
                <p><h2>What city should I deliver your presents to?</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                <input type="submit" value="OK!" class="btn btn-default" />
            </div>
        </div>




        <!-- What Do I need to do here for the Survey Responses and Recommendations??? -->
        <div class="row" id="DivSurveyResponses">
            <div class="row speech_box text-center">
                <p><h2>HIDDEN: SURVEY RESPONSES FROM CHILD</h2></p>
                <p><br /><br /><br /></p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SurveyResponses, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SurveyResponses, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SurveyResponses, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row" id="DivAcceptedRecommendations">
            <div class="row speech_box text-center">
                <p><h2>HIDDEN: ACCEPTED RECOMMENDATIONS FROM CHILD</h2></p>
                <p><br /><br /><br /></p>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AcceptedRecommendations, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AcceptedRecommendations, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AcceptedRecommendations, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


    </div>
}


